---
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    ci-run: "5599999470024"
    test-name: pytest
  name: "audio-pytest-sandbox-5599999470024"
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        ci-run: "5599999470024"
        test-name: pytest
    spec:
      restartPolicy: Never
      containers:
        - name: web
          image: "gcr.io/development-205018/sefaria-web-audio:sandbox-d0a94e3d-7467-47f2-a015-e4d99460fa76"
          imagePullPolicy: Always
          command: ["bash"]
          args: ["-c", "pip3 install pytest-django; pytest -v -m \"not deep and not failing\" ./sefaria; exit 0"]
          env:
            # WEB_CONCURRENCY is used for determining the number of server workers
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /app/logging-secret.json
            - name: ENV_NAME
              value: "audio"
            - name: STACK_COMPONENT
              value: web
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              memory: "3Gi"
              cpu: "500m"
            limits:
              memory: "3Gi"
              cpu: "1000m"

          volumeMounts:
            # https://stackoverflow.com/questions/53491603/kubernetes-volumemounts-a-file-not-a-directory
            - mountPath: /app/sefaria/local_settings.py
              name: local-settings
              subPath: local_settings.py
              readOnly: true
            - mountPath: /varnish-secret
              name: varnish-secret
              readOnly: true
            - mountPath: /school-lookup-data
              name: school-lookup-data
              readOnly: true
            - mountPath: /client-secret
              name: client-secret
              readOnly: true
            - mountPath: /google-cloud-secret
              name: backup-manager-secret
              readOnly: true
            - mountPath: /app/logging-secret.json
              name: logging-secret
              subPath: logging-secret.json
              readOnly: true
            - mountPath: /log
              name: logdir  
      volumes:
        - name:  local-settings
          secret:
            secretName: local-settings-audio
        - name: client-secret
          secret:
            secretName: google-client-secret-audio
        - name: backup-manager-secret  # used to access google cloud
          secret:
            secretName: backup-manager-secret-audio
        - name: logging-secret
          secret:
            secretName: logging-secret-audio
        - name: varnish-secret
          secret:
            secretName: varnish-secret-audio
        - name:  school-lookup-data
          secret:
            secretName: school-lookup-data-audio
        - name: logdir
          emptyDir: {}   
...




...
