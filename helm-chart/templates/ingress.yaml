{{ if eq .Values.deployEnv "prod" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-{{ .Values.deployEnv }}
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "sefaria-{{ .Values.deployEnv }}"
spec:
  tls:
    - secretName: origin-tls-{{ .Values.deployEnv }}
    - secretName: origin-il-tls-{{ .Values.deployEnv }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ tpl .host . | quote }}
      http:
        paths:
          - path: {{ .path | default "/*" | quote }}
            backend:
              serviceName: {{ .serviceName | default "nginx" }}-{{ .Values.deployEnv }}
              servicePort: {{ .port | default "80" }}
    {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: origin-tls-{{ .Values.deployEnv }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Files.Get (printf "secrets/tls/%s/origin.crt" (substr 0 4 .Values.deployEnv)) | b64enc }}
  tls.key: {{ .Files.Get (printf "secrets/tls/%s/origin.key" (substr 0 4 .Values.deployEnv)) | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: origin-il-tls-{{ .Values.deployEnv }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Files.Get (printf "secrets/tls/%s/origin-il.crt" (substr 0 4 .Values.deployEnv)) | b64enc }}
  tls.key: {{ .Files.Get (printf "secrets/tls/%s/origin-il.key" (substr 0 4 .Values.deployEnv)) | b64enc }}
...
{{end}}

{{if eq .Values.deployEnv "democracy"}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-{{ .Values.deployEnv }}
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "sefaria-{{ .Values.deployEnv }}"
spec:
  tls:
    - secretName: origin-tls-{{ .Values.deployEnv }}
  rules:
    - host: democracy.sefaria.org
      http:
        paths:
          - path: /*
            backend:
              serviceName: nginx-{{ .Values.deployEnv }}
              servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: origin-tls-{{ .Values.deployEnv }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Files.Get (printf "secrets/tls/%s/origin.crt" (substr 0 4 .Values.deployEnv)) | b64enc }}
  tls.key: {{ .Files.Get (printf "secrets/tls/%s/origin.key" (substr 0 4 .Values.deployEnv)) | b64enc }}
{{end}}
